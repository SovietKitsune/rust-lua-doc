[{"kind":"function","url":"./tealdoc-cli.humanize.html","name":"tealdoc-cli.humanize","description":"A factory used to generate a function that converts types into strings"},{"kind":"string","url":"./tealdoc-cli.version.html","name":"tealdoc-cli.version","description":""},{"kind":"unknown","url":"./tealdoc-cli.markdown.html","name":"tealdoc-cli.markdown","description":""},{"kind":"custom","url":"./tealdoc-cli.theme/index.html","name":"tealdoc-cli.theme","description":"The theme generation and storage area"},{"kind":"string","url":"./tealdoc-cli.theme/css.html","name":"tealdoc-cli.theme.css","description":"The generated CSS, this can be re-generated if needed"},{"kind":"function","url":"./tealdoc-cli.theme/createCSS.html","name":"tealdoc-cli.theme.createCSS","description":"Create the CSS stylesheet for all the themes"},{"kind":"table","url":"./tealdoc-cli.theme/themes.html","name":"tealdoc-cli.theme.themes","description":"All the currently loaded themes"},{"kind":"function","url":"./tealdoc-cli.theme/isNonText.html","name":"tealdoc-cli.theme.isNonText","description":"Check if the token kind is a plain-text token or not"},{"kind":"custom","url":"./tealdoc-cli.misc/index.html","name":"tealdoc-cli.misc","description":"Things used in templates that are not large enough for their own file"},{"kind":"function","url":"./tealdoc-cli.misc/toRoot.html","name":"tealdoc-cli.misc.toRoot","description":"Get the root of the documentation output"},{"kind":"string","url":"./tealdoc-cli.misc/tippy.html","name":"tealdoc-cli.misc.tippy","description":"The tippy configuration used"},{"kind":"table","url":"./tealdoc-cli.misc/order.html","name":"tealdoc-cli.misc.order","description":"The order in which module contents are sorted"},{"kind":"custom","url":"./tealdoc-cli.command/index.html","name":"tealdoc-cli.command","description":""},{"kind":"function","url":"./tealdoc-cli.command/load.html","name":"tealdoc-cli.command.load","description":"Load all created commands into the `argparse.Parser` instance"},{"kind":"function","url":"./tealdoc-cli.command/run.html","name":"tealdoc-cli.command.run","description":"Run a command"},{"kind":"function","url":"./tealdoc-cli.command/register.html","name":"tealdoc-cli.command.register","description":"Register a new command using the `Command` object"},{"kind":"custom","url":"./tealdoc-cli.command/Command.html","name":"tealdoc-cli.command.Command","description":"The structure of all commands"},{"kind":"string","url":"./tealdoc-cli.command/Command.html#prop.description.html","name":"tealdoc-cli.command.Command.description","description":""},{"kind":"function","url":"./tealdoc-cli.command/Command.html#fn.init.html","name":"tealdoc-cli.command.Command.init","description":""},{"kind":"string","url":"./tealdoc-cli.command/Command.html#prop.name.html","name":"tealdoc-cli.command.Command.name","description":""},{"kind":"function","url":"./tealdoc-cli.command/Command.html#fn.main.html","name":"tealdoc-cli.command.Command.main","description":""},{"kind":"table","url":"./tealdoc-cli.command/commands.html","name":"tealdoc-cli.command.commands","description":"All registered commands"},{"kind":"custom","url":"./tealdoc.logger/index.html","name":"tealdoc.logger","description":"Logger for debugging and logging"},{"kind":"function","url":"./tealdoc.logger/log.html","name":"tealdoc.logger.log","description":"Create a log message, the level must be a number between 1 and 5"},{"kind":"integer","url":"./tealdoc.logger/level.html","name":"tealdoc.logger.level","description":"The current level of the logger"},{"kind":"function","url":"./tealdoc.logger/error.html","name":"tealdoc.logger.error","description":"Send an error level message"},{"kind":"function","url":"./tealdoc.logger/info.html","name":"tealdoc.logger.info","description":"Send an informational message"},{"kind":"function","url":"./tealdoc.logger/trace.html","name":"tealdoc.logger.trace","description":"Get the traceback where all build-file paths are replaced with source-file paths"},{"kind":"boolean","url":"./tealdoc.logger/color.html","name":"tealdoc.logger.color","description":"If there should be color in the output"},{"kind":"function","url":"./tealdoc.logger/debug.html","name":"tealdoc.logger.debug","description":"Send a debug message\n\nThe debug message will be inspected and colorized to aid in debugging (both `inspect.lua` and `pl.lexer` must be installed)"},{"kind":"function","url":"./tealdoc.logger/warn.html","name":"tealdoc.logger.warn","description":"Send a warning level message"},{"kind":"function","url":"./tealdoc-cli.highlight.html","name":"tealdoc-cli.highlight","description":""},{"kind":"custom","url":"./tealdoc-cli.fs/index.html","name":"tealdoc-cli.fs","description":"Combination of luafilesystem and io"},{"kind":"string","url":"./tealdoc-cli.fs/_location.html","name":"tealdoc-cli.fs._location","description":""},{"kind":"function","url":"./tealdoc-cli.fs/mkdir.html","name":"tealdoc-cli.fs.mkdir","description":""},{"kind":"function","url":"./tealdoc-cli.fs/scriptLocation.html","name":"tealdoc-cli.fs.scriptLocation","description":""},{"kind":"function","url":"./tealdoc-cli.fs/search.html","name":"tealdoc-cli.fs.search","description":""},{"kind":"function","url":"./tealdoc-cli.fs/read.html","name":"tealdoc-cli.fs.read","description":""},{"kind":"function","url":"./tealdoc-cli.fs/dirTree.html","name":"tealdoc-cli.fs.dirTree","description":""},{"kind":"function","url":"./tealdoc-cli.fs/copyDir.html","name":"tealdoc-cli.fs.copyDir","description":""},{"kind":"function","url":"./tealdoc-cli.fs/write.html","name":"tealdoc-cli.fs.write","description":""},{"kind":"function","url":"./tealdoc-cli.fs/copy.html","name":"tealdoc-cli.fs.copy","description":""},{"kind":"function","url":"./tealdoc-cli.fs/searchAll.html","name":"tealdoc-cli.fs.searchAll","description":""},{"kind":"function","url":"./tealdoc-cli.fs/exists.html","name":"tealdoc-cli.fs.exists","description":""},{"kind":"custom","url":"./tealdoc.parser/index.html","name":"tealdoc.parser","description":"Utilities for extracting all the types from either virtual files or real files"},{"kind":"custom","url":"./tealdoc.parser/Function.html","name":"tealdoc.parser.Function","description":""},{"kind":"table","url":"./tealdoc.parser/Function.html#prop.returns.html","name":"tealdoc.parser.Function.returns","description":""},{"kind":"boolean","url":"./tealdoc.parser/Function.html#prop.vararg.html","name":"tealdoc.parser.Function.vararg","description":""},{"kind":"boolean","url":"./tealdoc.parser/Function.html#prop.isMetamethod.html","name":"tealdoc.parser.Function.isMetamethod","description":""},{"kind":"table","url":"./tealdoc.parser/Function.html#prop.params.html","name":"tealdoc.parser.Function.params","description":""},{"kind":"function","url":"./tealdoc.parser/getReport.html","name":"tealdoc.parser.getReport","description":""},{"kind":"function","url":"./tealdoc.parser/newSearch.html","name":"tealdoc.parser.newSearch","description":""},{"kind":"custom","url":"./tealdoc.parser/Type.html","name":"tealdoc.parser.Type","description":""},{"kind":"enum","url":"./tealdoc.parser/Type.html#prop.Kinds.html","name":"tealdoc.parser.Type.Kinds","description":"A list of all valid type names"},{"kind":"string","url":"./tealdoc.parser/Type.html#prop.tree.html","name":"tealdoc.parser.Type.tree","description":"The file-system tree that needs to be followed"},{"kind":"string","url":"./tealdoc.parser/Type.html#prop.name.html","name":"tealdoc.parser.Type.name","description":"The name of the type, usually inherited from their parent"},{"kind":"union","url":"./tealdoc.parser/Type.html#prop.key.html","name":"tealdoc.parser.Type.key","description":"The key of the table"},{"kind":"union","url":"./tealdoc.parser/Type.html#prop.parent.html","name":"tealdoc.parser.Type.parent","description":"The parent of the type, this doesn't exist for top-level types"},{"kind":"union","url":"./tealdoc.parser/Type.html#prop.customName.html","name":"tealdoc.parser.Type.customName","description":"The custom name of a type"},{"kind":"unknown","url":"./tealdoc.parser/Type.html#prop.kind.html","name":"tealdoc.parser.Type.kind","description":"The kind of type this is"},{"kind":"union","url":"./tealdoc.parser/Type.html#prop.values.html","name":"tealdoc.parser.Type.values","description":"The values of an enum, its separate from types due to enums being \"complex\" aka blocked"},{"kind":"union","url":"./tealdoc.parser/Type.html#prop.deprecated.html","name":"tealdoc.parser.Type.deprecated","description":"Signify that a type has been deprecated"},{"kind":"boolean","url":"./tealdoc.parser/Type.html#prop.hidden.html","name":"tealdoc.parser.Type.hidden","description":"If the type is hidden or not"},{"kind":"union","url":"./tealdoc.parser/Type.html#prop.func.html","name":"tealdoc.parser.Type.func","description":"Exists on function types"},{"kind":"union","url":"./tealdoc.parser/Type.html#prop.source.html","name":"tealdoc.parser.Type.source","description":"The source of where the type was found"},{"kind":"unknown","url":"./tealdoc.parser/Type.html#prop.struct.html","name":"tealdoc.parser.Type.struct","description":"Either a record or a module"},{"kind":"union","url":"./tealdoc.parser/Type.html#prop.types.html","name":"tealdoc.parser.Type.types","description":"The types that form this type, eg `type1 | type2` or `{type1, type2}`"},{"kind":"union","url":"./tealdoc.parser/Type.html#prop.yPos.html","name":"tealdoc.parser.Type.yPos","description":"The Y position of a type"},{"kind":"union","url":"./tealdoc.parser/Type.html#prop.value.html","name":"tealdoc.parser.Type.value","description":"The value of the table"},{"kind":"string","url":"./tealdoc.parser/Type.html#prop.description.html","name":"tealdoc.parser.Type.description","description":"The description of the type, every type can have a description since of records"},{"kind":"union","url":"./tealdoc.parser/Type.html#prop.stopY.html","name":"tealdoc.parser.Type.stopY","description":"The stopping point of a type"},{"kind":"function","url":"./tealdoc.parser/extractModules.html","name":"tealdoc.parser.extractModules","description":""},{"kind":"custom","url":"./tealdoc.parser/State.html","name":"tealdoc.parser.State","description":""},{"kind":"unknown","url":"./tealdoc.parser/State.html#prop.report.html","name":"tealdoc.parser.State.report","description":""},{"kind":"table","url":"./tealdoc.parser/State.html#prop.tokens.html","name":"tealdoc.parser.State.tokens","description":""},{"kind":"table","url":"./tealdoc.parser/State.html#prop.asts.html","name":"tealdoc.parser.State.asts","description":""},{"kind":"table","url":"./tealdoc.parser/State.html#prop.files.html","name":"tealdoc.parser.State.files","description":""},{"kind":"function","url":"./tealdoc.parser/createType.html","name":"tealdoc.parser.createType","description":""},{"kind":"custom","url":"./tealdoc.parser/Struct.html","name":"tealdoc.parser.Struct","description":""},{"kind":"table","url":"./tealdoc.parser/Struct.html#prop.fields.html","name":"tealdoc.parser.Struct.fields","description":""},{"kind":"boolean","url":"./tealdoc.parser/Struct.html#prop.isRecord.html","name":"tealdoc.parser.Struct.isRecord","description":""},{"kind":"custom","url":"./tealdoc-cli.util/index.html","name":"tealdoc-cli.util","description":""},{"kind":"function","url":"./tealdoc-cli.util/require.html","name":"tealdoc-cli.util.require","description":""},{"kind":"function","url":"./tealdoc-cli.util/loadGlobalConfig.html","name":"tealdoc-cli.util.loadGlobalConfig","description":""},{"kind":"table","url":"./tealdoc-cli.util/_requireCache.html","name":"tealdoc-cli.util._requireCache","description":""},{"kind":"custom","url":"./tealdoc-cli.generator/index.html","name":"tealdoc-cli.generator","description":""},{"kind":"function","url":"./tealdoc-cli.generator/load.html","name":"tealdoc-cli.generator.load","description":""},{"kind":"function","url":"./tealdoc-cli.generator/loadBase.html","name":"tealdoc-cli.generator.loadBase","description":""},{"kind":"table","url":"./tealdoc-cli.generator/baseState.html","name":"tealdoc-cli.generator.baseState","description":""},{"kind":"string","url":"./tealdoc-cli.generator/_current.html","name":"tealdoc-cli.generator._current","description":""},{"kind":"function","url":"./tealdoc-cli.generator/gen.html","name":"tealdoc-cli.generator.gen","description":""},{"kind":"string","url":"./tealdoc-cli.generator/_prefix.html","name":"tealdoc-cli.generator._prefix","description":""},{"kind":"table","url":"./tealdoc-cli.generator/_cache.html","name":"tealdoc-cli.generator._cache","description":""},{"kind":"custom","url":"./tealdoc.tag/index.html","name":"tealdoc.tag","description":"The tag api to allow certain pieces of text to modify a type"},{"kind":"function","url":"./tealdoc.tag/traverse.html","name":"tealdoc.tag.traverse","description":"Traverse the module tree in search of descriptions"},{"kind":"custom","url":"./tealdoc.tag/TagConfig.html","name":"tealdoc.tag.TagConfig","description":"The configuration all tags have"},{"kind":"unknown","url":"./tealdoc.tag/TagConfig.html#prop.allowed.html","name":"tealdoc.tag.TagConfig.allowed","description":"The types that are allowed, this comes from `tealdoc.tag.rules`"},{"kind":"function","url":"./tealdoc.tag/TagConfig.html#fn.fn.html","name":"tealdoc.tag.TagConfig.fn","description":"The callback function"},{"kind":"string","url":"./tealdoc.tag/TagConfig.html#prop.err.html","name":"tealdoc.tag.TagConfig.err","description":"An error message if `allowed` fails"},{"kind":"string","url":"./tealdoc.tag/TagConfig.html#prop.selector.html","name":"tealdoc.tag.TagConfig.selector","description":"The Lua pattern to match by"},{"kind":"custom","url":"./tealdoc.tag/rules/index.html","name":"tealdoc.tag.rules","description":"All the supported rules"},{"kind":"function","url":"./tealdoc.tag/rules/any.html","name":"tealdoc.tag.rules.any","description":"If any of the passed rules pass, return true"},{"kind":"function","url":"./tealdoc.tag/rules/anyKind.html","name":"tealdoc.tag.rules.anyKind","description":"Wildcard"},{"kind":"function","url":"./tealdoc.tag/rules/kind.html","name":"tealdoc.tag.rules.kind","description":"Require the type be a certain kind"},{"kind":"function","url":"./tealdoc.tag/rules/parentMustBe.html","name":"tealdoc.tag.rules.parentMustBe","description":"Assert that the parent of a type must be a certain kind"},{"kind":"string","url":"./tealdoc.version.html","name":"tealdoc.version","description":""}]