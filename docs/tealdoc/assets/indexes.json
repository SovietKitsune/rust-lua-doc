[{"url":"./tealdoc-cli.generator/index.html","kind":"custom","description":"","name":"tealdoc-cli.generator"},{"url":"./tealdoc-cli.generator/_prefix.html","kind":"string","description":"","name":"tealdoc-cli.generator._prefix"},{"url":"./tealdoc-cli.generator/baseState.html","kind":"table","description":"","name":"tealdoc-cli.generator.baseState"},{"url":"./tealdoc-cli.generator/gen.html","kind":"function","description":"","name":"tealdoc-cli.generator.gen"},{"url":"./tealdoc-cli.generator/_cache.html","kind":"table","description":"","name":"tealdoc-cli.generator._cache"},{"url":"./tealdoc-cli.generator/load.html","kind":"function","description":"","name":"tealdoc-cli.generator.load"},{"url":"./tealdoc-cli.generator/_current.html","kind":"string","description":"","name":"tealdoc-cli.generator._current"},{"url":"./tealdoc-cli.generator/loadBase.html","kind":"function","description":"","name":"tealdoc-cli.generator.loadBase"},{"url":"./tealdoc-cli.humanize.html","kind":"function","description":"A factory used to generate a function that converts types into strings","name":"tealdoc-cli.humanize"},{"url":"./tealdoc.version.html","kind":"string","description":"","name":"tealdoc.version"},{"url":"./tealdoc-cli.fs/index.html","kind":"custom","description":"Combination of luafilesystem and io","name":"tealdoc-cli.fs"},{"url":"./tealdoc-cli.fs/write.html","kind":"function","description":"","name":"tealdoc-cli.fs.write"},{"url":"./tealdoc-cli.fs/exists.html","kind":"function","description":"","name":"tealdoc-cli.fs.exists"},{"url":"./tealdoc-cli.fs/search.html","kind":"function","description":"","name":"tealdoc-cli.fs.search"},{"url":"./tealdoc-cli.fs/scriptLocation.html","kind":"function","description":"","name":"tealdoc-cli.fs.scriptLocation"},{"url":"./tealdoc-cli.fs/dirTree.html","kind":"function","description":"","name":"tealdoc-cli.fs.dirTree"},{"url":"./tealdoc-cli.fs/read.html","kind":"function","description":"","name":"tealdoc-cli.fs.read"},{"url":"./tealdoc-cli.fs/copy.html","kind":"function","description":"","name":"tealdoc-cli.fs.copy"},{"url":"./tealdoc-cli.fs/_location.html","kind":"string","description":"","name":"tealdoc-cli.fs._location"},{"url":"./tealdoc-cli.fs/searchAll.html","kind":"function","description":"","name":"tealdoc-cli.fs.searchAll"},{"url":"./tealdoc-cli.fs/mkdir.html","kind":"function","description":"","name":"tealdoc-cli.fs.mkdir"},{"url":"./tealdoc-cli.fs/copyDir.html","kind":"function","description":"","name":"tealdoc-cli.fs.copyDir"},{"url":"./tealdoc.parser/index.html","kind":"custom","description":"Utilities for extracting all the types from either virtual files or real files","name":"tealdoc.parser"},{"url":"./tealdoc.parser/createType.html","kind":"function","description":"Create a (parsable) type from an index and a report","name":"tealdoc.parser.createType"},{"url":"./tealdoc.parser/extractModules.html","kind":"function","description":"Extract all the indexes of generated modules","name":"tealdoc.parser.extractModules"},{"url":"./tealdoc.parser/Function.html","kind":"custom","description":"A structure that represents a bare function","name":"tealdoc.parser.Function"},{"url":"./tealdoc.parser/Function.html#prop.params.html","kind":"table","description":"","name":"tealdoc.parser.Function.params"},{"url":"./tealdoc.parser/Function.html#prop.returns.html","kind":"table","description":"","name":"tealdoc.parser.Function.returns"},{"url":"./tealdoc.parser/Function.html#prop.isMetamethod.html","kind":"boolean","description":"","name":"tealdoc.parser.Function.isMetamethod"},{"url":"./tealdoc.parser/Struct.html","kind":"custom","description":"A structure that represents a bare record or table","name":"tealdoc.parser.Struct"},{"url":"./tealdoc.parser/Struct.html#prop.fields.html","kind":"table","description":"","name":"tealdoc.parser.Struct.fields"},{"url":"./tealdoc.parser/Struct.html#prop.isRecord.html","kind":"boolean","description":"","name":"tealdoc.parser.Struct.isRecord"},{"url":"./tealdoc.parser/getReport.html","kind":"function","description":"Get a report on all the files\n\nThe report contains all indexed files as well as the types\n\nIf the modules being passed don't exist on disk, pass `true` to the virtual flag\n\nIf the files are Lua, pass `true` to the isLua flag","name":"tealdoc.parser.getReport"},{"url":"./tealdoc.parser/State.html","kind":"custom","description":"","name":"tealdoc.parser.State"},{"url":"./tealdoc.parser/State.html#prop.report.html","kind":"unknown","description":"","name":"tealdoc.parser.State.report"},{"url":"./tealdoc.parser/State.html#prop.files.html","kind":"table","description":"","name":"tealdoc.parser.State.files"},{"url":"./tealdoc.parser/State.html#prop.tokens.html","kind":"table","description":"","name":"tealdoc.parser.State.tokens"},{"url":"./tealdoc.parser/newSearch.html","kind":"function","description":"","name":"tealdoc.parser.newSearch"},{"url":"./tealdoc.parser/Type.html","kind":"custom","description":"A structure that represents every type","name":"tealdoc.parser.Type"},{"url":"./tealdoc.parser/Type.html#prop.func.html","kind":"union","description":"","name":"tealdoc.parser.Type.func"},{"url":"./tealdoc.parser/Type.html#prop.hidden.html","kind":"boolean","description":"","name":"tealdoc.parser.Type.hidden"},{"url":"./tealdoc.parser/Type.html#prop.struct.html","kind":"unknown","description":"","name":"tealdoc.parser.Type.struct"},{"url":"./tealdoc.parser/Type.html#prop.source.html","kind":"union","description":"","name":"tealdoc.parser.Type.source"},{"url":"./tealdoc.parser/Type.html#prop.customName.html","kind":"union","description":"","name":"tealdoc.parser.Type.customName"},{"url":"./tealdoc.parser/Type.html#prop.Kinds.html","kind":"enum","description":"A list of all valid type names","name":"tealdoc.parser.Type.Kinds"},{"url":"./tealdoc.parser/Type.html#prop.tree.html","kind":"string","description":"","name":"tealdoc.parser.Type.tree"},{"url":"./tealdoc.parser/Type.html#prop.tp.html","kind":"unknown","description":"","name":"tealdoc.parser.Type.tp"},{"url":"./tealdoc.parser/Type.html#prop.parent.html","kind":"union","description":"","name":"tealdoc.parser.Type.parent"},{"url":"./tealdoc.parser/Type.html#prop.yPos.html","kind":"union","description":"","name":"tealdoc.parser.Type.yPos"},{"url":"./tealdoc.parser/Type.html#prop.kind.html","kind":"unknown","description":"","name":"tealdoc.parser.Type.kind"},{"url":"./tealdoc.parser/Type.html#prop.key.html","kind":"union","description":"","name":"tealdoc.parser.Type.key"},{"url":"./tealdoc.parser/Type.html#prop.stopY.html","kind":"union","description":"","name":"tealdoc.parser.Type.stopY"},{"url":"./tealdoc.parser/Type.html#prop.deprecated.html","kind":"union","description":"","name":"tealdoc.parser.Type.deprecated"},{"url":"./tealdoc.parser/Type.html#prop.types.html","kind":"union","description":"","name":"tealdoc.parser.Type.types"},{"url":"./tealdoc.parser/Type.html#prop.value.html","kind":"union","description":"","name":"tealdoc.parser.Type.value"},{"url":"./tealdoc.parser/Type.html#prop.name.html","kind":"string","description":"","name":"tealdoc.parser.Type.name"},{"url":"./tealdoc.parser/Type.html#prop.values.html","kind":"union","description":"","name":"tealdoc.parser.Type.values"},{"url":"./tealdoc.parser/Type.html#prop.description.html","kind":"string","description":"","name":"tealdoc.parser.Type.description"},{"url":"./tealdoc-cli.version.html","kind":"string","description":"","name":"tealdoc-cli.version"},{"url":"./tealdoc.logger/index.html","kind":"custom","description":"Logger for debugging and logging","name":"tealdoc.logger"},{"url":"./tealdoc.logger/level.html","kind":"integer","description":"","name":"tealdoc.logger.level"},{"url":"./tealdoc.logger/log.html","kind":"function","description":"Create a log message, the level must be a number between 1 and 5","name":"tealdoc.logger.log"},{"url":"./tealdoc.logger/debug.html","kind":"function","description":"Send a debug message\n\nThe debug message will be inspected and colorized to aid in debugging (both `inspect.lua` and `pl.lexer` must be installed)","name":"tealdoc.logger.debug"},{"url":"./tealdoc.logger/color.html","kind":"boolean","description":"","name":"tealdoc.logger.color"},{"url":"./tealdoc.logger/warn.html","kind":"function","description":"Send a warning level message","name":"tealdoc.logger.warn"},{"url":"./tealdoc.logger/error.html","kind":"function","description":"Send an error level message","name":"tealdoc.logger.error"},{"url":"./tealdoc.logger/info.html","kind":"function","description":"Send an informational message","name":"tealdoc.logger.info"},{"url":"./tealdoc.logger/trace.html","kind":"function","description":"Get the traceback where all build-file paths are replaced with source-file paths","name":"tealdoc.logger.trace"},{"url":"./tealdoc-cli.markdown.html","kind":"unknown","description":"","name":"tealdoc-cli.markdown"},{"url":"./tealdoc-cli.theme/index.html","kind":"custom","description":"The theme generation and storage area","name":"tealdoc-cli.theme"},{"url":"./tealdoc-cli.theme/themes.html","kind":"table","description":"","name":"tealdoc-cli.theme.themes"},{"url":"./tealdoc-cli.theme/createCSS.html","kind":"function","description":"","name":"tealdoc-cli.theme.createCSS"},{"url":"./tealdoc-cli.theme/css.html","kind":"string","description":"","name":"tealdoc-cli.theme.css"},{"url":"./tealdoc-cli.theme/isNonText.html","kind":"function","description":"","name":"tealdoc-cli.theme.isNonText"},{"url":"./tealdoc-cli.misc/index.html","kind":"custom","description":"Things used in templates that are not large enough for their own file","name":"tealdoc-cli.misc"},{"url":"./tealdoc-cli.misc/toRoot.html","kind":"function","description":"","name":"tealdoc-cli.misc.toRoot"},{"url":"./tealdoc-cli.misc/tippy.html","kind":"string","description":"","name":"tealdoc-cli.misc.tippy"},{"url":"./tealdoc-cli.misc/order.html","kind":"table","description":"","name":"tealdoc-cli.misc.order"},{"url":"./tealdoc-cli.highlight.html","kind":"function","description":"","name":"tealdoc-cli.highlight"},{"url":"./tealdoc-cli.command/index.html","kind":"custom","description":"","name":"tealdoc-cli.command"},{"url":"./tealdoc-cli.command/run.html","kind":"function","description":"Run a command","name":"tealdoc-cli.command.run"},{"url":"./tealdoc-cli.command/Command.html","kind":"custom","description":"The structure of all commands","name":"tealdoc-cli.command.Command"},{"url":"./tealdoc-cli.command/Command.html#prop.description.html","kind":"string","description":"","name":"tealdoc-cli.command.Command.description"},{"url":"./tealdoc-cli.command/Command.html#prop.name.html","kind":"string","description":"","name":"tealdoc-cli.command.Command.name"},{"url":"./tealdoc-cli.command/Command.html#fn.init.html","kind":"function","description":"","name":"tealdoc-cli.command.Command.init"},{"url":"./tealdoc-cli.command/Command.html#fn.main.html","kind":"function","description":"","name":"tealdoc-cli.command.Command.main"},{"url":"./tealdoc-cli.command/register.html","kind":"function","description":"Register a new command using the `Command` object","name":"tealdoc-cli.command.register"},{"url":"./tealdoc-cli.command/load.html","kind":"function","description":"Load all created commands into the `argparse.Parser` instance","name":"tealdoc-cli.command.load"},{"url":"./tealdoc-cli.command/commands.html","kind":"table","description":"","name":"tealdoc-cli.command.commands"},{"url":"./tealdoc.tag/index.html","kind":"custom","description":"The tag api to allow certain pieces of text to modify a type","name":"tealdoc.tag"},{"url":"./tealdoc.tag/traverse.html","kind":"function","description":"","name":"tealdoc.tag.traverse"},{"url":"./tealdoc.tag/rules/index.html","kind":"custom","description":"","name":"tealdoc.tag.rules"},{"url":"./tealdoc.tag/rules/anyKind.html","kind":"function","description":"Wildcard","name":"tealdoc.tag.rules.anyKind"},{"url":"./tealdoc.tag/rules/kind.html","kind":"function","description":"Require the type be a certain kind","name":"tealdoc.tag.rules.kind"},{"url":"./tealdoc.tag/rules/any.html","kind":"function","description":"If any of the passed rules pass, return true","name":"tealdoc.tag.rules.any"},{"url":"./tealdoc.tag/rules/parentMustBe.html","kind":"function","description":"Assert that the parent of a type must be a certain kind","name":"tealdoc.tag.rules.parentMustBe"},{"url":"./tealdoc.tag/TagConfig.html","kind":"custom","description":"","name":"tealdoc.tag.TagConfig"},{"url":"./tealdoc.tag/TagConfig.html#prop.selector.html","kind":"string","description":"","name":"tealdoc.tag.TagConfig.selector"},{"url":"./tealdoc.tag/TagConfig.html#fn.fn.html","kind":"function","description":"The callback function","name":"tealdoc.tag.TagConfig.fn"},{"url":"./tealdoc.tag/TagConfig.html#prop.allowed.html","kind":"unknown","description":"","name":"tealdoc.tag.TagConfig.allowed"},{"url":"./tealdoc.tag/TagConfig.html#prop.err.html","kind":"string","description":"","name":"tealdoc.tag.TagConfig.err"},{"url":"./tealdoc-cli.util/index.html","kind":"custom","description":"","name":"tealdoc-cli.util"},{"url":"./tealdoc-cli.util/require.html","kind":"function","description":"","name":"tealdoc-cli.util.require"},{"url":"./tealdoc-cli.util/_requireCache.html","kind":"table","description":"","name":"tealdoc-cli.util._requireCache"},{"url":"./tealdoc-cli.util/loadGlobalConfig.html","kind":"function","description":"","name":"tealdoc-cli.util.loadGlobalConfig"}]